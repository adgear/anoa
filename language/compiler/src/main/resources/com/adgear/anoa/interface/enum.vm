${this.setSchema($schema)}
#if ($schema.getNamespace())
package $schema.getNamespace();
#end

#if ($schema.getDoc())
/** $schema.getDoc() */
#end
#if ($this.isDeprecated($schema))
@Deprecated
#end
#foreach ($annotation in $this.javaAnnotations($schema))
@$annotation
#end
public interface ${this.anoaInterfaceName()}<T>
  extends java.util.function.Supplier<T>,
          java.io.Serializable {

  /** Returns underlying object. */
  T get();

  /** Returns enumeration ordinal. */
  default int getOrdinal() { return hashCode(); }

#set( $i = 0 )
#foreach ($symbol in ${schema.getEnumSymbols()})
  default boolean ${this.isMethod($symbol)}() { return $i == getOrdinal(); }
#set( $i = $i + 1 )
#end

#if ($this.isWithNative())
#parse( "/com/adgear/anoa/interface/enum_native.vm" )
#end
#if ($this.isWithAvro())
#parse( "/com/adgear/anoa/interface/enum_avro.vm" )
#end
#if ($this.isWithProtobuf())
#parse( "/com/adgear/anoa/interface/enum_protobuf.vm" )
#end
#if ($this.isWithThrift())
#parse( "/com/adgear/anoa/interface/enum_thrift.vm" )
#end
}
