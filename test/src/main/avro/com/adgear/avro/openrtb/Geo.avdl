/**
3.3.11 Geo Object
The geo object itself and all of its parameters are optional, so default values are not provided. If an optional parameter is not specified, it should be considered unknown.
Note that the Geo Object may appear in one or both the Device Object and the User Object. This is intentional, since the information may be derived from either a device-oriented source (such as IP geo lookup), or by user registration information (for example provided to a publisher through a user registration). If the information is in conflict, itâ€™s up to the bidder to determine which information to use.

*/

record Geo {

  /** [01] Latitude from -90 to 90. South is negative. This should only be passed if known to be accurate (For example, not the centroid of a postal code).*/
  union {null, float} lat = null;

  /** [02] Longitude from -180 to 180. West is negative. This should only be passed if known to be accurate.*/
  union {null, float} lon = null;

  /** [03] Country using ISO-3166-1 Alpha-3.*/
  union {null, string} country = null;

  /** [04] Region using ISO 3166-2.*/
  union {null, string} region = null;

  /** [05] Region of a country using FIPS 10-4 notation (alternative to ISO 3166-2).*/
  union {null, string} regionfips104 = null;

  /** [06] Pass the metro code (seehttp://code.google.com/apis/adwords/docs/appendix/metrocodes.html). Metro codes are similar to but not exactly the same as Nielsen DMAs.*/
  union {null, string} metro = null;

  /** [07] City using United Nations Code for Trade and Transport Locations (http://www.unece.org/cefact/locode/ser vice/location.htm).*/
  union {null, string} city = null;

  /** [08] Zip/postal code.*/
  union {null, string} zip = null;

  /** [09] Indicate the source of the geo data (GPS, IP address, user provided). See Table 6.15 Location Type for a list of potential values. Type should be provided when lat/lon is provided.*/
  union {null, int} type = null;
}
